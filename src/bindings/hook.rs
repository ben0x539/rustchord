/* automatically generated by rust-bindgen 0.56.0 */

pub const MAX_KEY_EVENTS: u32 = 16;
pub const MAX_SOUND_EVENTS: u32 = 16;
extern "C" {
    pub fn KeyHappened(key: ::std::os::raw::c_int, down: ::std::os::raw::c_int);
}
extern "C" {
    pub fn HookKeyEvent(
        KeyEvent: ::std::option::Option<
            unsafe extern "C" fn(
                v: *mut ::std::os::raw::c_void,
                key: ::std::os::raw::c_int,
                down: ::std::os::raw::c_int,
            ),
        >,
        v: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn UnhookKeyEvent(
        KeyEvent: ::std::option::Option<
            unsafe extern "C" fn(
                v: *mut ::std::os::raw::c_void,
                key: ::std::os::raw::c_int,
                down: ::std::os::raw::c_int,
            ),
        >,
        v: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn SoundEventHappened(
        samples: ::std::os::raw::c_int,
        samps: *mut ::std::os::raw::c_short,
        channel_ct: ::std::os::raw::c_int,
        is_out: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn HookSoundInEvent(
        SoundE: ::std::option::Option<
            unsafe extern "C" fn(
                v: *mut ::std::os::raw::c_void,
                samples: ::std::os::raw::c_int,
                samps: *mut ::std::os::raw::c_short,
                channel_ct: ::std::os::raw::c_int,
            ),
        >,
        v: *mut ::std::os::raw::c_void,
        is_out: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn UnhookSoundInEvent(
        SoundE: ::std::option::Option<
            unsafe extern "C" fn(
                v: *mut ::std::os::raw::c_void,
                samples: ::std::os::raw::c_int,
                samps: *mut ::std::os::raw::c_short,
                channel_ct: ::std::os::raw::c_int,
            ),
        >,
        v: *mut ::std::os::raw::c_void,
        is_out: ::std::os::raw::c_int,
    );
}
